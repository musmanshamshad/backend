"use strict";function E(E){return E&&"object"==typeof E&&"default"in E?E.default:E}Object.defineProperty(exports,"__esModule",{value:!0});var T=E(require("chalk")),A=E(require("sql-formatter"));function R(){return(R=Object.assign||function(E){for(var T=1;T<arguments.length;T++){var A=arguments[T];for(var R in A)Object.prototype.hasOwnProperty.call(A,R)&&(E[R]=A[R])}return E}).apply(this,arguments)}var S={functions:["ASCII","CHAR_LENGTH","CHARACTER_LENGTH","CONCAT","CONCAT_WS","FIELD","FIND_IN_SET","FORMAT","INSERT","INSTR","LCASE","LEFT","LENGTH","LOCATE","LOWER","LPAD","LTRIM","MID","POSITION","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPACE","STRCMP","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TRIM","UCASE","UPPER","ABS","ACOS","ASIN","ATAN","ATAN2","AVG","CEIL","CEILING","COS","COT","COUNT","DEGREES","DIV","EXP","FLOOR","GREATEST","LEAST","LN","LOG","LOG10","LOG2","MAX","MIN","MOD","PI","POW","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SUM","TAN","TRUNCATE","ADDDATE","ADDTIME","CURDATE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURTIME","DATE","DATEDIFF","DATE_ADD","DATE_FORMAT","DATE_SUB","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_DAYS","HOUR","LAST_DAY","LOCALTIME","LOCALTIMESTAMP","MAKEDATE","MAKETIME","MICROSECOND","MINUTE","MONTH","MONTHNAME","NOW","PERIOD_ADD","PERIOD_DIFF","QUARTER","SECOND","SEC_TO_TIME","STR_TO_DATE","SUBDATE","SUBTIME","SYSDATE","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TO_DAYS","WEEK","WEEKDAY","WEEKOFYEAR","YEAR","YEARWEEK","BIN","BINARY","CASE","CAST","COALESCE","CONNECTION_ID","CONV","CONVERT","CURRENT_USER","DATABASE","IF","IFNULL","ISNULL","LAST_INSERT_ID","NULLIF","SESSION_USER","SYSTEM_USER","USER","VERSION"],keywords:["ACCESSIBLE","ACTION","ADD CONSTRAINT","ADD","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER COLUMN","ALTER TABLE","ALTER","ANALYSE","ANALYZE","AND","ANY","AS","ASC","AUTO_INCREMENT","AUTOCOMMIT","BACKUP DATABASE","BACKUP","BEGIN","BETWEEN","BINLOG","BOTH","CASCADE","CASE","CHANGE","CHANGED","CHARACTER SET","CHARSET","CHECK","CHECKSUM","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPRESSED","CONCURRENT","CONSTRAINT","CONTAINS","CREATE DATABASE","CREATE INDEX","CREATE OR REPLACE VIEW","CREATE PROCEDURE","CREATE TABLE","CREATE UNIQUE INDEX","CREATE VIEW","CREATE","CROSS","DATABASE","DATABASES","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DEFAULT","DEFINER","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DO","DROP COLUMN","DROP CONSTRAINT","DROP DATABASE","DROP DEFAULT","DROP INDEX","DROP TABLE","DROP VIEW","DROP","DUMPFILE","DUPLICATE","DYNAMIC","ELSE","ENCLOSED","END","ENGINE_TYPE","ENGINE","ENGINES","ESCAPE","ESCAPED","EVENTS","EXEC","EXECUTE","EXISTS","EXPLAIN","EXTENDED","FAST","FETCH","FIELDS","FILE","FIRST","FIXED","FLUSH","FOR","FORCE","FOREIGN KEY","FOREIGN","FROM","FULL OUTER JOIN","FULL","FULLTEXT","FUNCTION","GLOBAL","GRANT","GRANTS","GROUP BY","GROUP_CONCAT","HAVING","HEAP","HIGH_PRIORITY","HOSTS","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IGNORE","IN","INDEX","INDEXES","INFILE","INNER JOIN","INSERT INTO SELECT","INSERT INTO","INSERT_ID","INSERT_METHOD","INTERVAL","INTO","INVOKER","IS NOT NULL","IS NULL","ISOLATION","JOIN","KEY","KEYS","KILL","LEADING","LEFT JOIN","LEVEL","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCAL","LOCK","LOCKS","LOGS","LOW_PRIORITY","MARIA","MASTER_CONNECT_RETRY","MASTER_HOST","MASTER_LOG_FILE","MASTER","MATCH","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MERGE","MIN_ROWS","MINUTE_SECOND","MODE","MODIFY","MRG_MYISAM","MYISAM","NAMES","NATURAL","NOT NULL","NOT","NOW()","NULL","OFFSET","ON DELETE","ON UPDATE","ON","ONLY","OPEN","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER BY","OUTER JOIN","OUTFILE","PACK_KEYS","PAGE","PARTIAL","PARTITION","PARTITIONS","PASSWORD","PRIMARY KEY","PRIMARY","PRIVILEGES","PROCEDURE","PROCESS","PROCESSLIST","PURGE","QUICK","RAID_CHUNKS","RAID_CHUNKSIZE","RAID_TYPE","RAID0","RANGE","READ_ONLY","READ_WRITE","READ","REFERENCES","RELOAD","RENAME","REPAIR","REPEATABLE","REPLICATION","RESET","RESTORE","RESTRICT","RETURN","RETURNS","REVOKE","RIGHT JOIN","ROLLBACK","ROW_FORMAT","ROW","ROWNUM","ROWS","SECURITY","SELECT DISTINCT","SELECT INTO","SELECT TOP","SELECT","SEPARATOR","SERIALIZABLE","SESSION","SET","SHARE","SHOW","SHUTDOWN","SLAVE","SONAME","SOUNDS","SQL_AUTO_IS_NULL","SQL_BIG_RESULT","SQL_BIG_SELECTS","SQL_BIG_TABLES","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_LOG_BIN","SQL_LOG_OFF","SQL_LOG_UPDATE","SQL_LOW_PRIORITY_UPDATES","SQL_MAX_JOIN_SIZE","SQL_NO_CACHE","SQL_QUOTE_SHOW_CREATE","SQL_SAFE_UPDATES","SQL_SELECT_LIMIT","SQL_SLAVE_SKIP_COUNTER","SQL_SMALL_RESULT","SQL_WARNINGS","SQL","START","STARTING","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","STRIPED","SUPER","TABLE","TABLES","TEMPORARY","TERMINATED","THEN","TO","TOP","TRAILING","TRANSACTIONAL","TRUE","TRUNCATE TABLE","TYPE","TYPES","UNCOMMITTED","UNION ALL","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","VALUES","VARIABLES","VIEW","WHEN","WHERE","WITH","WORK","WRITE","YEAR_MONTH"],operators:["AND","BETWEEN","IN","LIKE","NOT","OR","IS","DIV","REGEXP","RLIKE","SOUNDS LIKE","XOR"]};function I(){var E,T,A=(E=["{"," ","}"],T||(T=E.slice(0)),E.raw=T,E);return I=function(){return A},A}var O={format:!0,noColors:!1,settings:{functions:{color:"#ff5555",modifiers:["bold"]},keywords:{color:"#ff5555",modifiers:["bold"]},operators:{color:"#91B859",modifiers:["bold"]},strings:{color:"#FFFFF"},numbers:{color:"#50fa7b"}}},N=function(E,A){var R=A.color,S=void 0===R?"#FFFFFF":R,O=A.modifiers,N=void 0===O?[]:O,L=new T.Instance({level:3});L.customColor=L.hex(S);var C=["customColor"].concat(N).join(".");return L(I(),C,E)};exports.prettify=function(E,T){void 0===T&&(T={});var I=R({},O,{},T),L=I.format,C=I.noColors,D=R({},O.settings,{},T.settings);return L&&(E=A.format(E)),C?E:E=function(E,T){var A={strings:/('\w+')/gim,numbers:/(\s\b\d+\b)/gim};return Object.keys(A).forEach((function(R){E=E.replace(A[R],N("$1",T[R]))})),E}(E=function(E,T,A){return Object.keys(T).forEach((function(R){T[R].forEach((function(T){E=E.replace(function(E){return new RegExp("\\b"+E+"\\b","gmi")}(T),N(T,A[R]))}))})),E}(E,S,D),D)};
//# sourceMappingURL=sql-log-prettifier.cjs.production.min.js.map
